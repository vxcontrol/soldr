@import '../mixins/mixins';

@mixin genTheme($tokens, $backgroundColorWeight, $borderColorWeight, $fontColorWeight, $hoverColorWeight) {
    background-color: mix(map-get($tokens, tag-primary-color), map-get($tokens, color-white), $backgroundColorWeight);
    border-color: mix(map-get($tokens, tag-primary-color), map-get($tokens, color-white), $borderColorWeight);
    color: mix(map-get($tokens, tag-primary-color), map-get($tokens, color-white), $fontColorWeight);

    @include when(hit) {
        border-color: map-get($tokens, tag-primary-color);
    }

    .el-tag__close {
        color: mix(map-get($tokens, tag-primary-color), map-get($tokens, color-white), $fontColorWeight);

        &:hover {
            color: map-get($tokens, color-white);
            background-color: mix(map-get($tokens, tag-primary-color), map-get($tokens, color-white), $hoverColorWeight);
        }
    }

    &.el-tag--info {
        background-color: mix(map-get($tokens, tag-info-color), map-get($tokens, color-white), $backgroundColorWeight);
        border-color: mix(map-get($tokens, tag-info-color), map-get($tokens, color-white), $borderColorWeight);
        color: mix(map-get($tokens, tag-info-color), map-get($tokens, color-white), $fontColorWeight);

        @include when(hit) {
            border-color: map-get($tokens, tag-info-color);
        }

        .el-tag__close {
            color: mix(map-get($tokens, tag-info-color), map-get($tokens, color-white), $fontColorWeight);

            &:hover {
                color: map-get($tokens, color-white);
                background-color: mix(map-get($tokens, tag-info-color), map-get($tokens, color-white), $hoverColorWeight);
            }
        }
    }

    &.el-tag--success {
        background-color: mix(map-get($tokens, tag-success-color), map-get($tokens, color-white), $backgroundColorWeight);
        border-color: mix(map-get($tokens, tag-success-color), map-get($tokens, color-white), $borderColorWeight);
        color: mix(map-get($tokens, tag-success-color), map-get($tokens, color-white), $fontColorWeight);

        @include when(hit) {
            border-color: map-get($tokens, tag-success-color);
        }

        .el-tag__close {
            color: mix(map-get($tokens, tag-success-color), map-get($tokens, color-white), $fontColorWeight);

            &:hover {
                color: map-get($tokens, color-white);
                background-color: mix(map-get($tokens, tag-success-color), map-get($tokens, color-white), $hoverColorWeight);
            }
        }
    }

    &.el-tag--warning {
        background-color: mix(map-get($tokens, tag-warning-color), map-get($tokens, color-white), $backgroundColorWeight);
        border-color: mix(map-get($tokens, tag-warning-color), map-get($tokens, color-white), $borderColorWeight);
        color: mix(map-get($tokens, tag-warning-color), map-get($tokens, color-white), $fontColorWeight);

        @include when(hit) {
            border-color: map-get($tokens, tag-warning-color);
        }

        .el-tag__close {
            color: mix(map-get($tokens, tag-warning-color), map-get($tokens, color-white), $fontColorWeight);

            &:hover {
                color: map-get($tokens, color-white);
                background-color: mix(map-get($tokens, tag-warning-color), map-get($tokens, color-white), $hoverColorWeight);
            }
        }
    }

    &.el-tag--danger {
        background-color: mix(map-get($tokens, tag-danger-color), map-get($tokens, color-white), $backgroundColorWeight);
        border-color: mix(map-get($tokens, tag-danger-color), map-get($tokens, color-white), $borderColorWeight);
        color: mix(map-get($tokens, tag-danger-color), map-get($tokens, color-white), $fontColorWeight);

        @include when(hit) {
            border-color: map-get($tokens, tag-danger-color);
        }

        .el-tag__close {
            color: mix(map-get($tokens, tag-danger-color), map-get($tokens, color-white), $fontColorWeight);

            &:hover {
                color: map-get($tokens, color-white);
                background-color: mix(map-get($tokens, tag-danger-color), map-get($tokens, color-white), $hoverColorWeight);
            }
        }
    }
}

@mixin tag($tokens) {
    @include b(tag) {
        @include genTheme($tokens, 10%, 20%, 100%, 100%);
        color: map-get($tokens, tag-primary-color);

        @include m(dark) {
            @include genTheme($tokens, 100%, 100%, 0%, 80%);
        }

        @include m(plain) {
            @include genTheme($tokens, 0%, 40%, 100%, 100%);
        }
    }
}
