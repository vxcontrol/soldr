@import '../mixins/mixins';

@mixin table($tokens) {
    @include b(table) {
        background-color: map-get($tokens, color-white);
        color: map-get($tokens, table-font-color);

        @include e(empty-text) {
            color: map-get($tokens, color-text-secondary);
        }

        @include e(expanded-cell) {
            background-color: map-get($tokens, color-white);
        }

        thead {
            color: map-get($tokens, table-header-font-color);

            &.is-group {
                th.el-table__cell {
                    background: map-get($tokens, background-color-base);
                }
            }
        }

        tr {
            background-color: map-get($tokens, color-white);
        }

        th.el-table__cell.is-leaf,
        td.el-table__cell {
            border-bottom: map-get($tokens, table-border);
        }

        th.el-table__cell {
            background-color: map-get($tokens, table-header-background-color);

            > .cell {
                &.highlight {
                    color: map-get($tokens, color-primary-text);
                }
            }
        }

        @include m((group, border)) {
            border: map-get($tokens, table-border);

            @include share-rule(border-pseudo) {
                background-color: map-get($tokens, table-border-color);
            }

            &::after {
                @include extend-rule(border-pseudo);
            }
        }

        &::before {
            @include extend-rule(border-pseudo);
        }

        // table--border
        @include m(border) {
            .el-table__cell {
                border-right: map-get($tokens, table-border);
            }

            th.el-table__cell.gutter:last-of-type {
                border-bottom: map-get($tokens, table-border);
            }

            & th.el-table__cell {
                border-bottom: map-get($tokens, table-border);
            }
        }

        @include e((fixed, fixed-right)) {
            &::before {
                background-color: map-get($tokens, border-color-lighter);
            }
        }

        @include e(fixed-right-patch) {
            background-color: map-get($tokens, color-white);
            border-bottom: map-get($tokens, table-border);
        }

        @include e(fixed-footer-wrapper) {
            & tbody td.el-table__cell {
                border-top: map-get($tokens, table-border);
                background-color: map-get($tokens, table-row-hover-background-color);
                color: map-get($tokens, table-font-color);
            }
        }

        @include e(footer-wrapper) {
            td.el-table__cell {
                border-top: map-get($tokens, table-border);
            }
        }

        @include e((header-wrapper, footer-wrapper)) {
            & tbody td.el-table__cell {
                background-color: map-get($tokens, table-row-hover-background-color);
                color: map-get($tokens, table-font-color);
            }
        }

        @include e(body-wrapper) {
            .el-table--border {
                @include when(scrolling-right) {
                    ~ .el-table__fixed-right {
                        border-left: map-get($tokens, table-border);
                    }
                }

                @include when(scrolling-left) {
                    ~ .el-table__fixed {
                        border-right: map-get($tokens, table-border);
                    }
                }
            }
        }

        .sort-caret {
            &.ascending {
                border-bottom-color: map-get($tokens, color-text-placeholder);
            }

            &.descending {
                border-top-color: map-get($tokens, color-text-placeholder);
            }
        }

        .ascending .sort-caret.ascending {
            border-bottom-color: map-get($tokens, color-primary);
        }

        .descending .sort-caret.descending {
            border-top-color: map-get($tokens, color-primary);
        }

        @include m(striped) {
            & .el-table__body {
                & tr.el-table__row--striped {
                    &.current-row td.el-table__cell {
                        background-color: map-get($tokens, table-current-row-background-color);
                    }
                }
            }
        }

        @include e(body) {
            tr.hover-row {
                &, &.el-table__row--striped {
                    &, &.current-row {
                        > td.el-table__cell {
                            background-color: map-get($tokens, table-row-hover-background-color);
                        }
                    }
                }
            }

            tr.current-row > td.el-table__cell {
                background-color: map-get($tokens, table-current-row-background-color);
            }
        }

        @include e(column-resize-proxy) {
            border-left: map-get($tokens, table-border);
        }

        @include e(column-filter-trigger) {
            & i {
                color: map-get($tokens, color-info-text);
            }
        }

        @include m(enable-row-hover) {
            .el-table__body tr:hover > td.el-table__cell {
                background-color: map-get($tokens, table-row-hover-background-color);
            }
        }
    }
}
