@use '../mixins/mixins';

@mixin input($tokens) {
    @include mixins.b(textarea) {
        font-size: map-get($tokens, font-size-base);

        @include mixins.e(inner) {
            color: map-get($tokens, input-font-color);
            background-color: map-get($tokens, input-background-color);
            border: map-get($tokens, input-border);

            &::placeholder {
                color: map-get($tokens, input-placeholder-color);
            }

            &:hover {
                border-color: map-get($tokens, input-hover-border);
            }

            &:focus {
                outline: none;
                border-color: map-get($tokens, input-focus-border);
            }
        }

        & .el-input__count {
            color: map-get($tokens, color-info-text);
            background: map-get($tokens, color-white);
        }

        @include mixins.when(disabled) {
            .el-textarea__inner {
                background-color: map-get($tokens, input-disabled-fill);
                border-color: map-get($tokens, input-disabled-border);
                color: map-get($tokens, input-disabled-color);

                &::placeholder {
                    color: map-get($tokens, input-disabled-placeholder-color);
                }
            }
        }

        @include mixins.when(exceed) {
            .el-textarea__inner {
                border-color: map-get($tokens, color-danger);
            }

            .el-input__count {
                color: map-get($tokens, color-danger-text);
            }
        }
    }

    @include mixins.b(input) {
        font-size: map-get($tokens, font-size-base);

        & .el-input__clear {
            color: map-get($tokens, input-icon-color);
            font-size: map-get($tokens, input-font-size);

            &:hover {
                color: map-get($tokens, input-clear-hover-color);
            }
        }

        & .el-input__count {
            color: map-get($tokens, color-info-text);

            .el-input__count-inner {
                background: map-get($tokens, color-white);
            }
        }

        @include mixins.e(inner) {
            background-color: map-get($tokens, input-background-color);
            border: map-get($tokens, input-border);
            color: map-get($tokens, input-font-color);

            &::placeholder {
                color: map-get($tokens, input-placeholder-color);
            }

            &:hover {
                border-color: map-get($tokens, input-hover-border);
            }

            &:focus {
                border-color: map-get($tokens, input-focus-border);
            }
        }

        @include mixins.e(suffix) {
            color: map-get($tokens, input-icon-color);
        }

        @include mixins.e(prefix) {
            color: map-get($tokens, input-icon-color);
        }

        @include mixins.when(active) {
            .el-input__inner {
                border-color: map-get($tokens, input-focus-border);
            }
        }

        @include mixins.when(disabled) {
            .el-input__inner {
                background-color: map-get($tokens, input-disabled-fill);
                border-color: map-get($tokens, input-disabled-border);
                color: map-get($tokens, input-disabled-color);

                &::placeholder {
                    color: map-get($tokens, input-disabled-placeholder-color);
                }
            }
        }

        @include mixins.when(exceed) {
            .el-input__inner {
                border-color: map-get($tokens, color-danger);
            }

            .el-input__suffix {
                .el-input__count {
                    color: map-get($tokens, color-danger-text);
                }
            }
        }
    }

    @include mixins.b(input-group) {
        @include mixins.e((append, prepend)) {
            background-color: map-get($tokens, background-color-base);
            color: map-get($tokens, color-info-text);
            border: map-get($tokens, border-base);
        }
    }
}
