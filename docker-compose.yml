version: '3'

services:
  mysql:
    image: mysql:5.7
    container_name: vx_mysql
    hostname: mysql.local
    restart: unless-stopped
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8
      - --collation-server=utf8_general_ci
    expose:
      - 3306/tcp
    ports:
      - ${INTERNAL_NET_HOST:-127.0.0.1}:3306:3306
    volumes:
      - vx-mysql-data:/var/lib/mysql
    networks:
      - vx-stand
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_USER: ${DB_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}

  minio:
    image: rancher/minio-minio:RELEASE.2020-07-13T18-09-56Z
    container_name: vx_minio
    hostname: minio.local
    restart: unless-stopped
    expose:
      - 9000/tcp
    ports:
      - ${INTERNAL_NET_HOST:-127.0.0.1}:9000:9000
    command:
      - server
      - /data
    volumes:
      - vx-minio-data:/data
    networks:
      - vx-stand
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}

  modules:
    image: vxcontrol/soldr-modules
    container_name: vx_modules
    hostname: modules.local
    restart: unless-stopped
    networks:
      - vx-stand
    environment:
      DB_HOST: mysql.local
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_ENDPOINT: http://minio.local:9000
    depends_on:
      minio:
        condition: service_started
      mysql:
        condition: service_started

  res:
    image: vxcontrol/soldr-res
    container_name: vx_res
    hostname: res.local
    restart: unless-stopped
    networks:
      - vx-stand
    environment:
      DB_HOST: mysql.local
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_ENDPOINT: http://minio.local:9000
    depends_on:
      minio:
        condition: service_started
      mysql:
        condition: service_started
      api:
        condition: service_started

  dbmigrate:
    image: vxcontrol/soldr-dbmigrate
    container_name: vx_dbmigrate
    hostname: dbmigrate.local
    networks:
      - vx-stand
    environment:
      DB_HOST: mysql.local
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      MYSQL_ROOT_USER: ${DB_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      AGENT_SERVER_HOST: server.local
      AGENT_SERVER_DB_NAME: ${AGENT_SERVER_DB_NAME}
      AGENT_SERVER_DB_USER: ${AGENT_SERVER_DB_USER}
      AGENT_SERVER_DB_PASS: ${AGENT_SERVER_DB_PASS}
      AGENT_SERVER_MINIO_BUCKET_NAME: ${AGENT_SERVER_MINIO_BUCKET_NAME}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_ENDPOINT: http://minio.local:9000
    depends_on:
      minio:
        condition: service_started
      mysql:
        condition: service_started

  server:
    image: vxcontrol/soldr-server
    container_name: vx_server
    hostname: server.local
    restart: unless-stopped
    networks:
      - vx-stand
    expose:
      - 8443/tcp
    ports:
      - ${AGENT_SERVER_HOST:-0.0.0.0}:${AGENT_SERVER_PORT:-8443}:8443
    environment:
      LISTEN: wss://0.0.0.0:8443
      LOG_DIR: logs
      CONFIG_LOADER: db
      VALID_LOADER: db
      FILES_LOADER: s3
      DB_HOST: mysql.local
      DB_PORT: ${DB_PORT}
      DB_NAME: ${AGENT_SERVER_DB_NAME}
      DB_USER: ${AGENT_SERVER_DB_USER}
      DB_PASS: ${AGENT_SERVER_DB_PASS}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${AGENT_SERVER_MINIO_BUCKET_NAME}
      MINIO_ENDPOINT: http://minio.local:9000
      OTEL_ADDR: ${OTEL_ADDR:-otelcontribcol.local:8148}
    volumes:
      - vx-server-data:/opt/vxserver/data:rw
      - vx-server-logs:/opt/vxserver/logs:rw
      - vx-server-store:/tmp/vx-store:rw
    depends_on:
      modules:
        condition: service_started
      dbmigrate:
        condition: service_started

  web:
    image: vxcontrol/soldr-web
    container_name: vx_web
    hostname: web.local
    restart: unless-stopped
    expose:
      - 8080/tcp
    ports:
      - ${WEB_SERVER_HOST:-127.0.0.1}:${WEB_SERVER_PORT:-8080}:8080
    networks:
      - vx-stand

  api:
    image: vxcontrol/soldr-api
    container_name: vx_api
    hostname: api.local
    restart: unless-stopped
    networks:
      - vx-stand
    ports:
      - ${API_SERVER_HOST:-0.0.0.0}:${API_SERVER_PORT_HTTP:-80}:8080
      - ${API_SERVER_HOST:-0.0.0.0}:${API_SERVER_PORT_HTTPS:-443}:8443
    volumes:
      - vx-api-server-ssl:/opt/api/ssl:rw
      - vx-api-server-logs:/opt/api/logs:rw
    environment:
      API_USE_SSL: ${UI_USE_SSL:-true}
      API_SERVER_HOST: ${API_SERVER_HOST:-0.0.0.0}
      API_SERVER_PORT_HTTPS: ${API_SERVER_PORT_HTTPS:-:443}
      API_SERVER_PORT_HTTP: ${API_SERVER_PORT_HTTP:-:80}
      API_STATIC_URL: http://web.local:8080
      DB_HOST: mysql.local
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_ENDPOINT: http://minio.local:9000
      OTEL_ADDR: ${OTEL_ADDR:-otelcontribcol.local:8148}
    depends_on:
      minio:
        condition: service_started
      mysql:
        condition: service_started
      web:
        condition: service_started
      dbmigrate:
        condition: service_started

  agent:
    image: vxcontrol/soldr-agent
    container_name: vx_agent
    hostname: agent.local
    restart: unless-stopped
    networks:
      - vx-stand
    environment:
      CONNECT: "wss://server.local:8443"
    depends_on:
      server:
        condition: service_started

  soldr-elastic-config:
    image: docker.io/vxcontrol/soldr-elastic-config:latest
    container_name: vx_esconfig
    restart: always
    networks:
      - vx-stand
    volumes:
      - elasticsearch_config:/usr/share/elasticsearch/config:rw
    environment:
      MASTER_PASSWORD: ${MASTER_PASSWORD:-P@ssw0rd}
    healthcheck:
      interval: 0h
      retries: 10
      test:
      - CMD
      - test
      - -f
      - /usr/share/elasticsearch/config/passfile
      timeout: 20s
    profiles: ["obs"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    container_name: vx_elasticsearch
    restart: always
    networks:
      - vx-stand
    expose:
      - 9200/tcp
      - 9300/tcp
    volumes:
      - elasticsearch_config:/usr/share/elasticsearch/config:rw
      - source: elasticsearch
        target: /usr/share/elasticsearch/data
        type: volume
    ulimits:
      memlock:
        hard: -1
        soft: -1
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
      ES_JAVA_OPTS: ${ES_JAVA_OPTS:-"-Xmx2g -Xms2g"}
    depends_on:
      soldr-elastic-config:
        condition: service_started
    profiles: ["obs"]

  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:v1.2.1
    container_name: vx_esexporter
    restart: always
    networks:
      - vx-stand
    expose:
      - 7979/tcp
    volumes:
      - elasticsearch_config:/usr/share/elasticsearch/config:ro
    entrypoint:
      - /bin/sh
      - -c
      - /bin/elasticsearch_exporter --es.uri=http://elastic:$$(cat /usr/share/elasticsearch/config/passfile)@elasticsearch:9200
    depends_on:
      soldr-elastic-config:
        condition: service_healthy
    profiles: ["obs"]

  grafana:
    image: grafana/grafana:latest
    container_name: vx_grafana
    restart: always
    networks:
      - vx-stand
    expose:
      - 3000/tcp
    ports:
      - 3000:3000
    volumes:
      - grafana_config:/etc/grafana:rw
      - grafana_data:/var/lib/grafana:rw
      - grafana_dashboards:/var/lib/grafana/dashboards:rw
    depends_on:
      soldr-observability-stack-config:
        condition: service_healthy
    profiles: ["obs"]

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: vx_jaeger
    restart: always
    command:
      - --config-file=/etc/jaeger/config.yml
    networks:
      - vx-stand
    expose:
      - 16686/tcp
      - 14250/tcp
      - 14268/tcp
      - 5778/tcp
      - 5775/udp
      - 6831/udp
      - 6832/udp
    volumes:
      - jaeger_config:/etc/jaeger:rw
    ulimits:
      nofile:
        hard: 65000
        soft: 65000
      nproc: 65535
    environment:
      SPAN_STORAGE_TYPE: ${SPAN_STORAGE_TYPE:-elasticsearch}
    depends_on:
      soldr-observability-stack-config:
        condition: service_healthy
    profiles: ["obs"]

  node-exporter:
    image: prom/node-exporter:latest
    container_name: vx_nexporter
    restart: always    
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    networks:
      - vx-stand
    expose:
      - 9100/tcp
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    deploy:
      mode: global
    depends_on:
      victoriametrics:
        condition: service_started
    profiles: ["obs"]

  soldr-observability-stack-config:
    image: docker.io/vxcontrol/soldr-observability-stack-config:latest
    container_name: vx_obsconfig
    restart: always
    networks:
      - vx-stand
    volumes:
      - elasticsearch_config:/usr/share/elasticsearch/config:rw
      - grafana_config:/etc/grafana:rw
      - jaeger_config:/etc/jaeger:rw
      - otelcontribcol_config:/etc/otel:rw
      - grafana_dashboards:/var/lib/grafana/dashboards:rw
    environment:
      ELK_VERSION: ${ELK_VERSION:-7.14.1}
    healthcheck:
      interval: 30s
      retries: 3
      test:
        - CMD
        - test
        - -f
        - /opt/soldr_observability/healthcheck
      timeout: 10s
    depends_on:
      soldr-elastic-config:
        condition: service_healthy
    profiles: ["obs"]
  
  otelcontribcol:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: vx_otelcontribcol
    hostname: otelcontribcol.local
    restart: always    
    networks:
      - vx-stand
    expose:
      - 55679/tcp
      - 14268/tcp
      - 8418/tcp
      - 8148/tcp
      - 6831/tcp
      - 1777/tcp
    ports:
      - 8148:8148
    volumes:
      - otelcontribcol_config:/etc/otel:rw
    entrypoint: ["/otelcol-contrib", "--config", "/etc/otel/config.yaml"]
    depends_on:
      soldr-observability-stack-config:
        condition: service_healthy
    profiles: ["obs"]

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.66.2
    container_name: vx_victoriametrics
    restart: always
    command:
      - --storageDataPath=/storage
      - --graphiteListenAddr=:2003
      - --opentsdbListenAddr=:4242
      - --httpListenAddr=:8428
      - --influxListenAddr=:8089
      - --selfScrapeInterval=10s
    networks:
      - vx-stand
    expose:
      - 8428/tcp
    ports:
      - 8428:8428
    volumes:
      - vm_data:/storage:rw
    depends_on:
      soldr-observability-stack-config:
        condition: service_started
    profiles: ["obs"]

networks:
  vx-stand:
    driver: bridge

volumes:
  vx-mysql-data:
    driver: local
  vx-minio-data:
    driver: local
  vx-api-server-ssl:
    driver: local
  vx-api-server-logs:
    driver: local
  vx-server-data:
    driver: local
  vx-server-logs:
    driver: local
  vx-server-store:
    driver: local
  elasticsearch:
    driver: local
  elasticsearch_config:
    driver: local
  grafana_config:
    driver: local
  grafana_dashboards:
    driver: local
  grafana_data:
    driver: local
  jaeger_config:
    driver: local
  otelcontribcol_config:
    driver: local
  vm_data:
    driver: local
